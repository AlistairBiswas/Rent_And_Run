
<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
<style>
    div.panel-body {
        overflow: scroll;
        background: url('http://subtlepatterns.com/patterns/geometry2.png');
    }

    body {
        font-family: Arial, Helvetica, sans-serif;
        background: url(../images/banner3.jpg);
    }

    * {
        box-sizing: border-box;
    }

    /* Button used to open the chat form - fixed at the bottom of the page */
    .open-button {
        background-color: dodgerblue;
        color: white;
        padding: 16px 20px;
        border: none;
        cursor: pointer;
        opacity: 0.8;
        position: fixed;
        bottom: 23px;
        right: 28px;
        width: 100px;
        border-radius: 100%;
    }

    /* The popup chat - hidden by default */
    .chat-popup {
        display: none;
        position: fixed;
        bottom: 0;
        right: 15px;
        border: 3px solid #f1f1f1;
        z-index: 9;
    }

    /* Add styles to the form container */
    .panel-heading {
        max-width: 300px;
        padding: 10px;
        background-color: white;
    }

    .panel-footer {
        max-width: 300px;
        padding: 10px;
        background-color: white;
    }

    .panel-body {
        max-width: 300px;
        padding: 10px;
        background-color: white;
    }

    /* Full-width textarea */

    /* When the textarea gets focus, do something */
    .form-control:focus {
        background-color: white;
        outline: none;
    }

    /* Set a style for the submit/send button */
    .form-container .btn {
        background-color: #04AA6D;
        color: white;
        padding: 16px 20px;
        border: none;
        cursor: pointer;
        width: 100%;
        margin-bottom: 10px;
        opacity: 0.8;
    }

    /* Add a red background color to the cancel button */
    .form-container .cancel {
        background-color: red;
    }

    /* Add some hover effects to buttons */
    .form-container .btn:hover, .open-button:hover {
        opacity: 1;
    }

    .fa-commenting {
        font-size: 3em;
    }
</style>
<h2>Chat</h2>


<button class="open-button" onclick="openForm()"><i class="fa fa-commenting"></i></button>

<div class="chat-popup" id="myForm">

    <div class="chat-panel panel panel-default">
        <div class="panel-heading">
            <span class="input-group-btn" style="right:2px;">
                <input type="button" class="btn btn-danger btn-sm" value="Close" onclick="closeForm()">
            </span>
        </div>
        <!-- /.panel-heading -->
        <div class="panel-body" id="chat" style="height:250px;">
            <input type="hidden" id="displayname" />

            <p id="discussion"></p>
        </div>
        <!-- /.panel-body -->
        <div class="panel-footer">
            <div class="input-group">
                <input id="message" type="text" name="message" class="form-control input-sm" placeholder="Type your message here..." />

                <span class="input-group-btn">
                    <input type="button" class="btn btn-warning btn-sm" id="sendmessage" value="Send" />

                </span>
            </div>
        </div>
    </div>
</div>





@section scripts {











    <script>
        function openForm() {
            document.getElementById("myForm").style.display = "block";
        }

        function closeForm() {
            document.getElementById("myForm").style.display = "none";
        }
    </script>





    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.4.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var chat = $.connection.chatHub;
            // Create a function that the hub can call back to display messages.
            chat.client.addNewMessageToPage = function (name, message) {
                if (name == "siham" || name == "fuad") {
                    // Add the message to the page.
                    $('#discussion').append('<p style="color:green; text-align:left; width:500px"><strong><img = src="https://www.phplivesupport.com/pics/icons/avatars/public/avatar_7.png" title="Atir">'
                        + ' </strong> ' + htmlEncode(message) + '</p>');
                }
                else {
                    // Add the message to the page.
                    $('#discussion').append('<p style="color:blue;text-align:right;"><strong><img = src="https://www.phplivesupport.com/pics/icons/avatars/public/avatar_71.png" title="Peter">'
                        + ' </strong> ' + htmlEncode(message) + '</p>');
                }
            };
            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    chat.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
            });
        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
